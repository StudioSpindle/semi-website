$transition-speed-in: .128s;
$transition-speed-out: .256s;
$transition-easing-in: ease-out;
$transition-easing-out: ease-out;

$box-shadow-1: rgba(0, 0, 0, 0.2) 0px 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px;
$box-shadow-3: 0 1px 3px 0 rgba(1,67,163,.05), 0 4px 8px 3px rgba(1,67,163,.15);

@mixin transition-in {
	transition: background $transition-speed-in $transition-easing-in,
				border-color $transition-speed-in $transition-easing-in,
				border-radius $transition-speed-in $transition-easing-in,
				color $transition-speed-in $transition-easing-in,
				opacity $transition-speed-in $transition-easing-in,
				outline $transition-speed-in $transition-easing-in,
				transform $transition-speed-in $transition-easing-in;
}
@mixin transition-out {
	transition: background $transition-speed-out $transition-easing-out,
				border-color $transition-speed-out $transition-easing-out,
				border-radius $transition-speed-out $transition-easing-out,
				color $transition-speed-out $transition-easing-out,
				opacity $transition-speed-out $transition-easing-out,
				outline $transition-speed-out $transition-easing-out,
				transform $transition-speed-out $transition-easing-out;
}

@mixin visually-hidden {
    clip: rect(1px, 1px, 1px, 1px);
    height: 1px; width: 1px;
    overflow: hidden;
    position: absolute !important;
}

@mixin focus-inset {
	@include transition-in;
	box-shadow: 0 0 0 2px $color-semi-accent inset;
	outline: none;
}

@mixin elevation($level: '') {
	@if $level == foreground {
		box-shadow: $box-shadow-3;
	} @else {
		box-shadow: $box-shadow-1;
	}
}

@mixin background-opacity($color, $opacity: .5) {
    background: $color; //  Fallback to solid color
    background: rgba($color, $opacity);
}

@function data-uri-color($color) {
    @return '%23' + str-slice('#{$color}', 2, -1)
}

@mixin transitionWidth {
	transition: width .2s;
}
